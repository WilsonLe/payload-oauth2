################################################################################
# App Config
################################################################################
# Required: Database URI, uses SQLite for ease of development
DATABASE_URI=file:./payload-oauth2.db

# Required: Secret for JWT
PAYLOAD_SECRET=hellohereisasecretforyou

# Required: URL for the app
NEXT_PUBLIC_URL=http://localhost:3000

################################################################################
# Google OAuth Config
################################################################################
# Optional: Google OAuth2 Client ID, not activated if not set
# GOOGLE_CLIENT_ID=

# Optional: Google OAuth2 Client Secret, not activated if not set
# GOOGLE_CLIENT_SECRET=

################################################################################
# zitadel oauth config
################################################################################
# optional: google oauth2 client id, not activated if not set
# ZITADEL_CLIENT_ID=

# optional: google oauth2 client secret, not activated if not set
# ZITADEL_CLIENT_SECRET=

################################################################################
# Microsoft Entra ID OAuth 2.0 config
################################################################################
# optional: Microsoft Entra ID client id, not activated if not set
# MICROSOFT_ENTRA_ID_CLIENT_ID=

# optional: Microsoft Entra ID client secret, not activated if not set
# MICROSOFT_ENTRA_ID_CLIENT_SECRET=

# optional: Microsoft Entra ID client secret, not activated if not set
# MICROSOFT_ENTRA_ID_TENANT_ID=

# optional: Microsoft Entra ID administrator group id, activated if not set
# MICROSOFT_ENTRA_ID_ADMINISTRATOR_GROUP_ID=

# Note: For Microsoft Entra ID, you need to:
# 1. Create an app registration
# - Go to Azure Portal -> Microsoft Entra ID -> App Registrations -> New Registration
# - Fill in the name and select the supported account types
# - Add a "Web" redirect URI: http://localhost:3000/api/users/oauth/microsoft-entra-id/callback
# - When created, go to API Permissions -> Add a permission -> Microsoft Graph -> Delegated permissions -> Select the ones you need, e.g. email, openid, profile and offline_access -> Add permissions
# - Optional: If you do not want users to have to give consent to your app everytime they login: Click on Grant admin consent for {tenant} -> Yes
# - Optional: If you want groups to be part of your token(s), you can go to Token configuration -> Add groups claim -> Select the groups you want to add -> Save
# - Go to Certificates & secrets -> Client secrets -> New client secret -> Add a description -> Expires -> Add -> Copy the secret (it will only be shown once) -> And save the secret somewhere safe or add it to your .env file
# You can read a little about registering apps here as well: https://learn.microsoft.com/en-us/azure/active-directory/develop/quickstart-register-app

################################################################################
# Apple OAuth Config
################################################################################
# Optional: Apple OAuth2 Client ID (Services ID), not activated if not set
# APPLE_CLIENT_ID=com.your.app.id

# Optional: Apple OAuth2 Client Secret (Generated from Apple Developer Portal)
# APPLE_CLIENT_SECRET=your-generated-secret

# Note: For Apple OAuth, you need to:
# 1. Create an App ID in Apple Developer Portal
# Quick link: https://developer.apple.com/account/resources/identifiers/bundleId/add/bundle
# Long instruction
# 2. Create a Services ID
# 3. Configure domain association
# 4. Generate a Client Secret
# See: https://developer.apple.com/sign-in-with-apple/get-started/
